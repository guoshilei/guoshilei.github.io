[{"title":"**css中浮动的影响**","date":"2014-10-11T09:27:56.000Z","path":"2014/10/11/title/","text":"## 1、浮动存在的问题 ##浮动的元素不能撑高父级。元素脱离标准流之后， 不能再撑高它的父级盒子浮动会影响后面的浮动的元素。如果后面的浮动方向相同， 会去贴上一个浮动最后一个元素的边。 2、清楚浮动影响的方法 给父盒子加高度给父级元素增加高度， 它内部的浮动元素， 被限制了范围， 不会再影响后面的元素浮动。 效果： 解决父级高度的问题， 解决浮动影响后面的浮动的问题。 问题： 高度还是不能够自适应。 清除浮动属性 clear 元素都可以设置一个叫做 clear 的属性， 清除浮动的作用。 属性值： left、 right、 both。作用： clear 整体表示清除自身受到的其他元素带来的浮动的影响。left： 清除受到的左浮动影响。right： 清除受到的右浮动影响。both： 清除受到的左右两个方向的浮动影响。 box1{ clear: both;} ` 解决： 浮动的互相影响。` 问题： 父盒子还是不能被子盒子撑高。 margin 如果小于中间浮动的子元素的高度， 显示效果失效。隔墙法外墙法：在右浮动元素的父盒子之间隔一堵墙。 添加两个类， 一个是用来清除浮动， 一个用来模拟外边距。 cl{ clear: both; 清除浮动 } .h20{ height: 20px; 模拟间距 } 解决： 浮动互相影响。问题： 高度自适应， MARGIN 失效。 内墙法：将清除浮动的墙放在有浮动元素的父盒子内部的最后。 只要有浮动， 就在盒子内部加一堵墙。 解决： 浮动互相影响， 高度自适应， margin 失效。 缺点： ①html 结构布局， 很多需要进行浮动， 每个浮动的盒子内都需要隔一堵墙。 页面结构复杂会出现很多冗余的没有意义的标签。 ②一个盒子内的标签要浮动就都浮动， 浮动后面的墙是一个标准流里的元素overflow： hidden盒子内部的元素可以设置溢出模式， 隐藏， 自动显示。overflow： 溢出。 属性值： hidden 溢出隐藏， auto 溢出滚动（ 多出的内容出现滚动条）` { `overflow： hidden; overflow： auto;` } overflow 的其他小功能： 能够清除盒子内部元素的浮动影响 解决： 浮动互相影响， 高度自适应， margin 失效。 优势： 能够解决所有的问题， 不会增加无用的标签。 3、overflow： hidden； 的加载机制：高度自适应： 如果元素有溢出隐藏的属性， 网页加载时， 会强制的去元素内部搜索， 识别所有内部元素的高度， 会用最高的元素高度配给我们父盒子的自适应高度。 浮动影响： 加载时， 如果有溢出隐藏， 强制检索， 看盒子内部是否有浮动的元素， 如果有， 会被整体管理起来， 在自身的高度内， 不会影响其他的浮动元素。实际工作中： 就用 overflow 来清浮动 title: “# CSS-background背景 #”date: 2014-10-16 17:27:56categories: css tags: css一、background背景background是一个复合属性。 1、background-color背景色渲染位置：border及以内。属性值：十六进制、rgb、rgba、颜色名。 background-color: blue; 2、background-image背景图实际渲染位置：跟背景色一样，能看到的其实就是border以内。属性值：url(图片路径)。 background-image: url(images/hai.jpg); 添加的背景图片会铺满整个盒子的背景区域。 url：uniform resource locator。统一资源定位符。实际就是背景图片的来源。url内部的值：图片的路径，可以是相对路径，也可以是绝对路径。 背景图和背景色的压盖顺序：image压盖color。 3、background-repeat背景重复设置背景图片以什么方式进行重复。属性值：repeat 默认值，整个背景区域重复no-repeat 不重复repeat-x 水平方向重复repeat-y 垂直方向重复 background-repeat: repeat; background-repeat: no-repeat; background-repeat: repeat-x; background-repeat: repeat-y;` body背景加载效果： repeat-x的一个妙用：制作一个渐变背景的导航栏。给盒子添加一个背景图：水平方向1像素宽，垂直方向就是正常高度，让背景图，水平重复铺开。 background-image: url(images/nav_bg.png); background-repeat: repeat-x; background-position背景图位置 作用：规定我们插入的背景图的在盒子里的位置。属性值：像素表示法、单词表示法、百分比表示法。 ①像素表示法属性值有两个，都用像素表示： background-position: 150px 100px; 第一个属性值：背景图片左上角距离盒子背景区域左上角（border以内）的水平偏移量。 第二个属性值：背景图片左上角距离盒子背景区域左上角（border以内）的垂直偏移量。 位置的属性值分正负。正方向：向右向下移动；负方向：向左向上移动。指的是图片针对（0,0）点移动的方向。 css精灵图技术：很多元素都有背景图，需要有实际存在图片，就需要发送多个http请求下载图片。将很多小的背景图合成在一张图片上，谁用背景图加载的都是一张图片。用法：给一个合适盒子大小，通过背景图定位找到图片的位置。 ②单词表示法 图片位置水平和垂直方向用代表方向的单词来表示 水平方向，第一个属性值：left ，center，right。背景在盒子内部居左、居中、居右。 垂直方向，第二个属性值：top，center，bottom。背景图在盒子内部居上、居中、居下。 background-position: center center; body大背景效果：水平居中、垂直居上。 background-position: center top; 制作通栏ｂａｎｎｅｒ。 ③百分比表示法 关注：百分比参考依据。 background-position: 100% 50%; background-attachment背景附着 指的是背景是否随着页面滚动而滚动。 属性值：scroll 滚动，背景图会随着页面滚动走。 fixed 固定，背景图不会随着页面滚动而滚走。 background-attachment: fixed; background复合属性background: #f00 fixed url(images/bg4.jpg) no-repeat center top; 五个属性之间位置可以更换，position的两个属性值位置不能电脑。 #二、背景实际应用# 1、padding挤出背景图效果方法：给盒子用padding-left留出一个空白区域，添加一个合适的背景图，不重复。 padding-top: 96px; background: url(images/in_12.png) no-repeat center top; 2、文字换图片提高搜索引擎优化：搜索时都是搜索文字。 h1标签内部放的是logo的图片。用一个技巧，logo图不用插入图，换成背景图，内部放置的是简单的关键字。 h1 a{ display: block; height: 96px; background: url(images/in_15.png); 添加背景图，用户看到 text-indent: -9999px; 隐藏文字 overflow: hidden; }","tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"}]}]